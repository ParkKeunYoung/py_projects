[[ 머신 러닝]]

1. 개요

    - Machine Learning
    - 데이터에서 지식을 추출하는 작업 : ( 데이터->정보->지식->지혜(의사결정) )
    - 통계학, 컴퓨터 과학, 데이터마이닝, 인공지능 등 이런 전분야가 얽혀있는 연구 분야
    - 예측 분석(predictive analysis), 통계적 머신러닝(statistical learing)으로 불려진다.
    -  예) 영화추천, 음식 주문, 쇼핑, 맞춤형 VOD,
           넷플릭스, 아마존, 페이스북 등에서 머신 러닝 모델을 사용하여 메뉴들을 추천,기타 메뉴 생성

2. why?(왜 쓰는가?)

    - 과거 지능형 어플리케이션
      1) 규칙기반 => if ~ else ~
      2) 규칙을 설계하고 구현하기 위해서는 전문가가 필요 => 프로그래머
      3) 시스템 변경이 발생되면 => 유지보수 => 다시 개발, 부분 개발 등 ...
    
    - 지도 학습
      1) 이미 알려진 사례를 바탕으로 일반화 된 모델을 만들어 의사결정 프로세스를 자동화하는 것
      2) supervised learing
      3) 사용자는 입력과 기대되는 결과를 제공
      4) 알고리즘을 사용하여 입력에서 원하는 출력을 나오게끔 방법을 찾는다.
      5) 이렇게 방법이 완성이되면, 사람의 개입 없이 새로운 입력에 대해 결과를 만들 수가 있다.
      6) 입력 데이터로부터 기대 출력이 나오게끔 알고리즘을 가르치는 것
         => 입력과 출력으로부터 학습하는 머신러닝 알고리즘을 지도 학습 알고리즘이라고 정의
      7) 예) 
         - <편지 봉투에 손으로 작성한 우편번호를 숫자 판별>
           입력: 편지 봉투를 아주 많이 모아서 숫자부분만 추출
           출력: 우편 봉투를 직접 확인해서 출력 값을 기록
         
         - <의료 영상 이미지를 기반으로 종양 판단>
           입력: 이미지(CT사진)
           출력: 종양이 양성,음성
           기타: 전문가 의견이나 실제 진단 필요
           
         - <의심되는 신용카드 거래 감지>
           입력: 거래 내역
           출력: 부정 거래 여부 출력
           기타: 신용카드 사에서 제공하는 부정 거래 내역을 데이터셋으로 활용(<- 개인정보 보호법 고려사항)
        
    - 비지도 학습
      1) unsupervised learing
      2) 입력을 주어지나, 출력은 제공이 안된다.
      3) 쉽지 않다!!
      4) 예)
         - <블로그 글의 주제를 구분>
           입력: 많은 양의 텍스트 -> (핵심 주제 찾기)
           출력: 사전에 주제도 모르고, 그것이 얼마나 많은지도 모르고, 출력값 준비 불가
           
         - <고객 취향 유형에 맞춰서 그룹 분류>
           입력: 고객 데이터
           출력: 어떤 그룹이 존재할지, 얼마나 많을지, 출력값 준비 불가
         
         - <비정상적인 웹사이트 탐지>
           입력: 일상적이지 않는 접근 탐지 패턴을 찾으려면, 부정행위라는 데이터, 버그를 구분해내야 한다.
                 -> 로그
           출력: 웹 트레픽을 기준으로 예측 ->정상적인 접근, 비정상 행위에 대해 알 수 없음.
    
     - 특성(feature) -> 변수, 컬럼, 
      1) 데이터 셋의 열
      
     - 샘플(sample), 데이터 포인트 -> row, 데이터 한 개, 
      1) 데이터 셋의 행, 개체 
      
     - 특성공학, 특성추출
      1) 좋은 결과가 나오게끔 입력데이터를 만들어 가는 과정
      
 
    - 강화학습

3. 통찰

   - 중요한 과정
     1) 사용하는 데이터를 이해
     2) 이런 데이터를 사용해서 해결해야하는 문제, 어떤 관련성을 가졌는지 이해
     3) 데이터셋으로 무엇을 하는 것인지, 머신 러닝 모델 생성 전에 확실하게 이해
     4) 알고리즘 별로 잘 들어맞는 데이터들이 존재
     
   - 질의
     1) 어떤 상황/질의에 대한 답을 원하는지?
     2) 현재 확보된 데이터가 이런 답을 줄 수 있는지?
     3) 이런 질의/질문을 머신 러닝의 문제로 기술할 수 있는가? 방법은?
     4) 문제를 해결하기위해 데이터는 충분한가?
     5) 내가 추출한 데이터의 특성에 대한 이해, 이를 통한 좋은 예측이 가능할지?
     6) 머신 러닝 어플리케이션 성과는 무엇으로 측정하는가?
     7) 머신 러닝이 적용된 솔루션 다른 기존 시스템/업무와 어떻게 연계되는가?
     
   - 머신러닝은 이런 전체 솔루션(시스템)의 일부, 일련의 과정이다!

4. 라이브러리

   - scikit-learn : 사이킷런
     1) 오픈소스
     2) 독보적!!
     3) 파이썬 라이브러리
     4) numpy + scipy 베이스

   - numpy
     1) 수학 과학용 라이브러리
     2) 고수준 수학 함수 
        - 선형대수연산( 백터, 행렬, 선형변환 )
        - 푸리에변환( 시간의 함수, 연속적 신호 등을 주파수 성분으로 분해하는 변환 )
     3) 유사난수생성기
   - scipy
    
     1) 고성능 선형대수
     2) 함수 최적화
     3) 신호처리
     4) 특수 수학
     5) 통계 분포
     6) 희소행령등등.
     
